/*
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#include "est_definitions.h"
#include "key_shorthands.h"

#define DFLT 0
#define NAVG 1
#define SYMB 2
#define NUMS 3
#define KEYB 4

#define _____ &trans
#define XXXXX &none

#define LSFT_Z        &mt LSFT Z 
#define RSFT_MINS     &mt RSFT SLASH 

#define EXT_OFF   &ext_power EP_OFF
#define EXT_ON    &ext_power EP_ON
#define EXT_TOG   &ext_power EP_TOG

 &led_strip {
     chain-length = <25>; // Uncomment if using only per-key LEDs.
 };

&lt {
    flavor = "hold-preferred";
    quick-tap-ms = <200>;
};

/ {
  combos { 
    compatible = "zmk,combos";
    combo_adia {
      timeout-ms = <200>;
      key-positions = <21 22>;
      bindings = <&kp ADIA>;
    };
    combo_left_middle {
      timeout-ms = <200>;
      key-positions = <14 15 16>;
      bindings = <&mo NUMS>;
    };
    combo_left_thumb {
      timeout-ms = <200>;
      key-positions = <42 43>;
      bindings = <&mt LCTL ESC>;
    };
    combo_right_top {
      timeout-ms = <200>;
      key-positions = <7 8 9>;
      bindings = <&kp TAB>;
    };
    combo_right_middle {
      timeout-ms = <200>;
      key-positions = <19 20 21>;
      bindings = <&kp RET>;
    };
    combo_right_thumb {
      timeout-ms = <200>;
      key-positions = <46 47>;
      bindings = <&kp LGUI>;
    };
    combo_outer_middle_pinkies {
      timeout-ms = <200>;
      key-positions = <13 22>;
      bindings = <&mo KEYB>;
    };
  };
  
    keymap {
        compatible = "zmk,keymap";

        home_layer {
            bindings = <
            XXXXX &kp Q &kp W &kp E &kp R &kp T &kp Y &kp U &kp I &kp O &kp P XXXXX
            XXXXX &kp A &kp S &kp D &kp F &kp G &kp H &kp J &kp K &kp L ODIA XXXXX
            XXXXX LSFT_Z &kp X &kp C &kp V &kp B XXXXX XXXXX XXXXX XXXXX &kp N &kp M &kp COMMA &kp DOT RSFT_MINS XXXXX
            XXXXX XXXXX &kp RET &lt NAVG SPC XXXXX XXXXX &lt SYMB ESC &kp BSPC XXXXX XXXXX 
           >;
        };

        navigation_layer {
            bindings = <
            XXXXX &kp TAB  XXXXX XXXXX XXXXX XXXXX XXXXX &kp HOME XXXXX &kp END XXXXX XXXXX 
            XXXXX &kp TAB &kp LCTRL &kp LALT &kp LMETA XXXXX &kp LEFT &kp DOWN &kp UP &kp RIGHT OTIL XXXXX
            XXXXX &kp LSFT XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX UDIA XXXXX
            XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX
            >;
	};

        symbols_layer {
            bindings = <
            XXXXX EST_PRCT EST_BKTK EST_LSBR EST_LABR EST_SLSH EST_BSLS EST_RABR EST_RSBR EST_AMPR EST_PLUS XXXXX 
            XXXXX EST_PIPE EST_DBQT EST_ASTR EST_LBRC EST_LCBR EST_RCBR EST_RBRC EST_EQLS EST_SIQT EST_DOLR XXXXX
            XXXXX EST_CARO EST_CARE EST_TLDE EST_EXCL EST_ATSI XXXXX XXXXX XXXXX XXXXX EST_HSTG EST_QSTN EST_SCLN EST_COLN EST_USCR XXXXX
            XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX
            >;
        };

        numbers_layer {
            bindings = <
            XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX &kp N7 &kp N8 &kp N9 XXXXX XXXXX
            XXXXX XXXXX &kp LCTRL &kp LALT &kp LMETA XXXXX XXXXX &kp N4 &kp N5 &kp N6 XXXXX XXXXX
            XXXXX &kp LSHFT XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX &kp N1 &kp N2 &kp N3 XXXXX XXXXX
            XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX &kp N0 XXXXX XXXXX
            >;
        };
        
        keyboard_layer {
            bindings = <
            XXXXX XXXXX XXXXX EXT_TOG EXT_ON EXT_OFF XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX
            XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt XXXXX
            XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX
                                          XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX XXXXX
            >;
        };
    };
};
